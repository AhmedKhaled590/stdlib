/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var fs = require( 'fs' );
var path = require( 'path' );
var logger = require( 'debug' );
var extractPackageFiles = require( './extract_package_files.js' );
var writeFile = require( '@stdlib/fs/write-file' ).sync;
var browserEntryPoints = require( '@stdlib/_tools/pkgs/browser-entry-points' );
var browserDeps = require( '@stdlib/_tools/pkgs/browser-deps' );


// VARIABLES //

var debug = logger( 'esm:extract-files' );


// MAIN //

function extractSource( pkgs, destinationBasePath, options, clbk ) {
	var metadata;
	var opts;
	var err;

	console.log('pkgs:', pkgs);

	function onDeps( err, results ) {
		if ( err instanceof Error ) {
			clbk( err );
		}

		console.log(results);
	}

	opts = { };

	browserDeps( pkgs, opts, onDeps );

	return;

	if( Array.isArray(pkgs) ) {
		for (var i = 0; i < pkgs.length; i++) {
			metadata.push(extractPackageFiles( pkgs[i], destinationBasePath, options ));
		}
	} else {
		metadata.push(extractPackageFiles( pkgs, destinationBasePath, options ));
	}

	err = writeFile( path.join( destinationBasePath, '_buildtmp', 'manifest.json' ), JSON.stringify(metadata, null, 2) );

	if ( err instanceof Error ) {
		throw err;
	}

	return metadata;
}


// EXPORTS //

module.exports = extractSource;
