/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// VARIABLES //

var TOP_LEVEL_NS_REGEX = /^@stdlib\/(\w+)$/;


// MAIN //

/**
 * Create a virtual top level namespace package.
 *
 * @param {StringArray} pkgs - a list of package names
 * @returns {String} namespace package source for top-level packages
 */
function topLevelNamespace( pkgs ) {
	var nsList;
	var lines;
	var parts;
	var pkg;
	var i;

	lines = [];

	lines.push( '\'use strict\';\n' );
	lines.push( '// MODULES //\n' );
	lines.push( 'var setReadOnly = require( \'@stdlib/utils/define-read-only-property\' );\n\n' );

	lines.push( '// MAIN //\n' );
	lines.push( '/**' );
	lines.push( '* Top-level namespace. ');
	lines.push( '*' );
	lines.push( '* @namespace stdlib' );
	lines.push( '*/' );
	lines.push( 'var stdlib = {};\n' );

	nsList = [];

	for ( i = 0; i < pkgs.length; i++ ) {
		parts = pkgs[ i ].match( TOP_LEVEL_NS_REGEX );

		if ( parts === null ) {
			continue;
		}

		nsList.push( parts[ 1 ] );
	}

	nsList.sort();

	for ( i = 0; i < nsList.length; i++ ) {
		pkg = nsList[ i ];

		lines.push( '/**' );
		lines.push( '* @name ' + pkg );
		lines.push( '* @memberof stdlib' );
		lines.push( '* @readonly' );
		lines.push( '* @type {Namespace}' );
		lines.push( '* @see {@link module:@stdlib/' + pkg + '}' );
		lines.push( '*/' );
		lines.push( 'setReadOnly( stdlib, \'' + pkg + '\', require( \'@stdlib/' + pkg + '\' ) );\n' );
	}

	lines.push( '\n// EXPORTS //\n' );
	lines.push( 'module.exports = stdlib;' );

	return lines.join( '\n' );
}


// EXPORTS //

module.exports = topLevelNamespace;
