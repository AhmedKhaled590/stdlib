/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var logger = require( 'debug' );
var objectKeys = require( '@stdlib/utils/keys' );


// VARIABLES //

var debug = logger( 'esm:create-dist' );


// MAIN //

function computeVendorModules( manifest ) {
	var i;
	var j;
	var allDeps;
	var allPkgs;
	var knownPkgs;
	var vendorDeps;
	var knownPkgList;

	// Collect a de-duped list of all stdlib dependencies
	var obj = {};
	for ( i = 0; i < manifest.length; i++ ) {
		var deps = manifest[i].deps;
		for ( j = 0; j < deps.length; j++ ) {
			obj[deps[j]] = true;
		}
	}
	allDeps = objectKeys(obj);

	// This is slow! Instead, we'll just use a simple proxy to answer "which modules are stdlib modules?"
	//allPkgs = names();
	allPkgs = allDeps.filter(dep => /^@stdlib/.test(dep))

	// Create an index for simple lookup of "is this dep known to stdlib?"
	knownPkgs = {};
	for ( i = 0; i < allPkgs.length; i++ ) {
		knownPkgs[allPkgs[i]] = true;
	}
	knownPkgList = objectKeys(knownPkgs);

	vendorDeps = allDeps.filter(dep => !knownPkgs[dep]);

	return vendorDeps;
}


// EXPORTS //

module.exports = computeVendorModules;
