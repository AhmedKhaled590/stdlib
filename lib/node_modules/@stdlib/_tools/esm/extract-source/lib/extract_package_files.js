/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var fs = require('fs');
var path = require( 'path' );
var mkdirp = require('mkdirp');
var pkgDeps = require( '@stdlib/_tools/pkgs/deps' );
var entryPoints = require( '@stdlib/_tools/pkgs/entry-points' );


// MAIN //

function extractPackageFiles( root, destinationBasePath, options, clbk ) {
	var entryPoint = entryPoints.sync([ root ]);
	var outputDirectory = path.join( destinationBasePath, root );
	var deps = pkgDeps.sync([ root ]);

	var pkg = deps[0].pkg;
	var files = deps[0].files;
	var dir = deps[0].dir;

	var pkgDir = pkg;

	var metadata = {
		'pkg': pkg,
		'baseDir': destinationBasePath,
		'pkgDir': pkgDir,
		'entry': path.join(pkgDir, path.relative(entryPoint[0].dir, entryPoint[0].entries[0])),
		'files': [],
		'deps': deps[0].deps,
	};


	for (var i = 0; i < files.length; i++) {
		var inputPath = files[i];

		var packageFilePath = path.relative(dir, inputPath);
		var outputRelPath = path.join( pkg, packageFilePath );

		metadata['files'].push( path.join(destinationBasePath, outputRelPath ));

		var outputAbsPath = path.resolve(path.join(outputDirectory, packageFilePath ));

		mkdirp.sync( path.dirname( outputAbsPath ) );

		fs.copyFileSync( inputPath, outputAbsPath );
	}

	return metadata;
}


// EXPORTS //

module.exports = extractPackageFiles;
