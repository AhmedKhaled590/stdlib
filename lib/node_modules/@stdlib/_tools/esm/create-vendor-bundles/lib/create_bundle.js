/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var debug = require('debug');
var rollup = require('rollup');
var rollupPluginVirtual = require( '@rollup/plugin-virtual' );
var rollupPluginResolve = require( '@rollup/plugin-node-resolve' ).default;
var rollupPluginCommonjs = require( '@rollup/plugin-commonjs' );
var minify = require( 'terser' ).minify;


// VARIABLES //

var logger = debug('esm:create-vendor-bundles');

// https://github.com/d3/d3-interpolate/issues/58
var D3_WARNING = /Circular dependency.*d3-interpolate/


// FUNCTIONS //

function createBundle( moduleName, clbk ) {
	logger( 'creating vendor bundle for %s', moduleName );

	var inputOptions = {
    input: 'virtual.js',
    plugins: [
			rollupPluginVirtual({
				'virtual.js': 'import mod from \'' + moduleName + '\';\nexport default mod;',
			}),
      rollupPluginResolve({
				'preferBuiltins': false,
        'browser': true,
      }),
      rollupPluginCommonjs()
    ],
		onwarn: function ( message ) {
			if ( D3_WARNING.test(message) ) {
				return;
			}
		},
  };

  var outputOptions = {
  };

	return rollup.rollup(inputOptions).then(bundle => {
    return bundle.generate(outputOptions);
  }).then(output => {
    return output.output[0].code;
  }).then(code => {
    return minify(code, {
      'compress': true,
      'mangle': true,
    });
  }).then(output => {
		clbk(null, output.code);
  }).catch(error => {
		clbk(error);
  });
}


// EXPORTS //

module.exports = createBundle;
